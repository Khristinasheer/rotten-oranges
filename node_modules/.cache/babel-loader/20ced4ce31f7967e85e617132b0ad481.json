{"ast":null,"code":"var _jsxFileName = \"/Users/khristina/Documents/front-end/interview-homework/src/screens/home/ScenarioTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport { StyledUl, Button, StyledDiv } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({\n  scenario,\n  text,\n  day\n}) => {\n  const data = useSelector(state => state.AlgorithmReducer.firstScenarioData, (left, right) => {\n    return false; // let isEqual = true;\n    // left.forEach((row, i) => {\n    //   row.forEach((col, j) => {\n    //     console.log(\"isEqual\", col, right[i][j]);\n    //     if (col !== right[i][j]) {\n    //       isEqual = false;\n    //     }\n    //   });\n    // });\n    // return isEqual;\n  });\n\n  if (scenario === 0) {\n    console.log(\"home\", data);\n  }\n\n  const dispatch = useDispatch();\n  const scenarioItems = data.map((row, index) => {\n    return /*#__PURE__*/React.createElement(StyledUl, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: `${scenario}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, row.map((column, i) => {\n      const k = `${scenario}-${index}-${i}`;\n\n      if (column === 2) {\n        return /*#__PURE__*/React.createElement(ZombieHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 22\n          }\n        });\n      } else if (column === 1) {\n        return /*#__PURE__*/React.createElement(HealthyHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 22\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(EmptyHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 22\n          }\n        });\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Day: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, text), scenarioItems, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(InfectHomes(scenario)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Play animation\"));\n};\n\nexport default ScenarioTemplate;","map":{"version":3,"sources":["/Users/khristina/Documents/front-end/interview-homework/src/screens/home/ScenarioTemplate.js"],"names":["React","useSelector","useDispatch","InfectHomes","StyledUl","Button","StyledDiv","HealthyHome","ZombieHome","EmptyHome","ScenarioTemplate","scenario","text","day","data","state","AlgorithmReducer","firstScenarioData","left","right","console","log","dispatch","scenarioItems","map","row","index","column","i","k"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,UAA5C;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,iBAAnD;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA6B;AACpD,QAAMC,IAAI,GAAGb,WAAW,CACrBc,KAAD,IAAWA,KAAK,CAACC,gBAAN,CAAuBC,iBADZ,EAEtB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACf,WAAO,KAAP,CADe,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAdqB,CAAxB;;AAiBA,MAAIR,QAAQ,KAAK,CAAjB,EAAoB;AAClBS,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AACD;;AAED,QAAMQ,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,aAAa,GAAGT,IAAI,CAACU,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7C,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,GAAG,EAAG,GAAEf,QAAS,IAAGe,KAAM,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,MAAD,EAASC,CAAT,KAAe;AACtB,YAAMC,CAAC,GAAI,GAAElB,QAAS,IAAGe,KAAM,IAAGE,CAAE,EAApC;;AACA,UAAID,MAAM,KAAK,CAAf,EAAkB;AAChB,4BAAO,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,CAAf,EAAkB;AACvB,4BAAO,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,MAEA;AACL,4BAAO,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KATA,CADH,CADF,CADF;AAgBD,GAjBqB,CAAtB;AAmBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIjB,IAAJ,CAFF,EAGGW,aAHH,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACnB,WAAW,CAACQ,QAAD,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAUD,CApDD;;AAsDA,eAAeD,gBAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport { StyledUl, Button, StyledDiv } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({ scenario, text, day }) => {\n  const data = useSelector(\n    (state) => state.AlgorithmReducer.firstScenarioData,\n    (left, right) => {\n      return false;\n      // let isEqual = true;\n      // left.forEach((row, i) => {\n      //   row.forEach((col, j) => {\n      //     console.log(\"isEqual\", col, right[i][j]);\n      //     if (col !== right[i][j]) {\n      //       isEqual = false;\n      //     }\n      //   });\n      // });\n      // return isEqual;\n    }\n  );\n\n  if (scenario === 0) {\n    console.log(\"home\", data);\n  }\n\n  const dispatch = useDispatch();\n  const scenarioItems = data.map((row, index) => {\n    return (\n      <StyledUl key={index}>\n        <li key={`${scenario}-${index}`}>\n          {row.map((column, i) => {\n            const k = `${scenario}-${index}-${i}`;\n            if (column === 2) {\n              return <ZombieHome key={k} />;\n            } else if (column === 1) {\n              return <HealthyHome key={k} />;\n            } else {\n              return <EmptyHome key={k} />;\n            }\n          })}\n        </li>\n      </StyledUl>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      <p>Day: </p>\n      <p>{text}</p>\n      {scenarioItems}\n      <Button onClick={() => dispatch(InfectHomes(scenario))}>\n        Play animation\n      </Button>\n    </StyledDiv>\n  );\n};\n\nexport default ScenarioTemplate;\n"]},"metadata":{},"sourceType":"module"}