{"ast":null,"code":"import { css } from \"styled-components\";\nimport breakpoints from \"./breakpoints\";\nconst em = 16;\nexport const media = {\n  up: Object.keys(breakpoints.up).reduce((acc, label) => {\n    const emSize = breakpoints.up[label] / em;\n\n    acc[label] = (...args) => css`\n      @media (min-width: ${emSize}em) {\n        ${css(...args)};\n      }\n    `;\n\n    return acc;\n  }, {}),\n  down: Object.keys(breakpoints.down).reduce((acc, label) => {\n    const emSize = breakpoints.down[label] / em;\n\n    acc[label] = (...args) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(...args)};\n      }\n    `;\n\n    return acc;\n  }, {})\n};\nexport default media;","map":{"version":3,"sources":["/Users/khristina/Documents/front-end/rotten-oranges/src/helpers/media.js"],"names":["css","breakpoints","em","media","up","Object","keys","reduce","acc","label","emSize","args","down"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,EAAE,GAAG,EAAX;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,EAAE,EAAEC,MAAM,CAACC,IAAP,CAAYL,WAAW,CAACG,EAAxB,EAA4BG,MAA5B,CAAmC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrD,UAAMC,MAAM,GAAGT,WAAW,CAACG,EAAZ,CAAeK,KAAf,IAAwBP,EAAvC;;AACAM,IAAAA,GAAG,CAACC,KAAD,CAAH,GAAa,CAAC,GAAGE,IAAJ,KAAaX,GAAI;2BACPU,MAAO;UACxBV,GAAG,CAAC,GAAGW,IAAJ,CAAU;;KAFnB;;AAKA,WAAOH,GAAP;AACD,GARG,EAQD,EARC,CADe;AAUnBI,EAAAA,IAAI,EAAEP,MAAM,CAACC,IAAP,CAAYL,WAAW,CAACW,IAAxB,EAA8BL,MAA9B,CAAqC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACzD,UAAMC,MAAM,GAAGT,WAAW,CAACW,IAAZ,CAAiBH,KAAjB,IAA0BP,EAAzC;;AACAM,IAAAA,GAAG,CAACC,KAAD,CAAH,GAAa,CAAC,GAAGE,IAAJ,KAAaX,GAAI;2BACPU,MAAO;UACxBV,GAAG,CAAC,GAAGW,IAAJ,CAAU;;KAFnB;;AAKA,WAAOH,GAAP;AACD,GARK,EAQH,EARG;AAVa,CAAd;AAqBP,eAAeL,KAAf","sourcesContent":["import { css } from \"styled-components\";\nimport breakpoints from \"./breakpoints\";\n\nconst em = 16;\n\nexport const media = {\n  up: Object.keys(breakpoints.up).reduce((acc, label) => {\n    const emSize = breakpoints.up[label] / em;\n    acc[label] = (...args) => css`\n      @media (min-width: ${emSize}em) {\n        ${css(...args)};\n      }\n    `;\n    return acc;\n  }, {}),\n  down: Object.keys(breakpoints.down).reduce((acc, label) => {\n    const emSize = breakpoints.down[label] / em;\n    acc[label] = (...args) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(...args)};\n      }\n    `;\n    return acc;\n  }, {}),\n};\n\nexport default media;\n"]},"metadata":{},"sourceType":"module"}