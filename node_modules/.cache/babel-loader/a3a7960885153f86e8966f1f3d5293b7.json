{"ast":null,"code":"var _jsxFileName = \"/Users/khristina/Documents/front-end/interview-homework/src/screens/home/ScenarioTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport { StyledUl, Button, StyledDiv } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({\n  scenario,\n  text,\n  day\n}) => {\n  const data = useSelector(state => {\n    if (action.scenario === 0) {\n      return state.AlgorithmReducer.firstScenarioData;\n    }\n\n    return state.AlgorithmReducer.secondScenarioData;\n  });\n  console.log(\"home\", data);\n  const dispatch = useDispatch();\n  let lastId = 0;\n  const scenarioItems = data.map((i, number) => {\n    return /*#__PURE__*/React.createElement(StyledUl, {\n      key: number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: lastId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, data[number].map(i => {\n      lastId++;\n\n      if (i === 2) {\n        return /*#__PURE__*/React.createElement(ZombieHome, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 22\n          }\n        });\n      } else if (i === 1) {\n        return /*#__PURE__*/React.createElement(HealthyHome, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(EmptyHome, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }\n        });\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Day: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, text), scenarioItems, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(InfectHomes(scenario)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Play animation\"));\n};\n\nexport default ScenarioTemplate;","map":{"version":3,"sources":["/Users/khristina/Documents/front-end/interview-homework/src/screens/home/ScenarioTemplate.js"],"names":["React","useSelector","useDispatch","InfectHomes","StyledUl","Button","StyledDiv","HealthyHome","ZombieHome","EmptyHome","ScenarioTemplate","scenario","text","day","data","state","action","AlgorithmReducer","firstScenarioData","secondScenarioData","console","log","dispatch","lastId","scenarioItems","map","i","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,UAA5C;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,SAAlC,QAAmD,iBAAnD;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA6B;AACpD,QAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAD,IAAW;AAClC,QAAIC,MAAM,CAACL,QAAP,KAAoB,CAAxB,EAA2B;AACzB,aAAOI,KAAK,CAACE,gBAAN,CAAuBC,iBAA9B;AACD;;AACD,WAAOH,KAAK,CAACE,gBAAN,CAAuBE,kBAA9B;AACD,GALuB,CAAxB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;AAEA,QAAMQ,QAAQ,GAAGpB,WAAW,EAA5B;AACA,MAAIqB,MAAM,GAAG,CAAb;AACA,QAAMC,aAAa,GAAGV,IAAI,CAACW,GAAL,CAAS,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAC5C,wBACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,GAAG,EAAEJ,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,IAAI,CAACa,MAAD,CAAJ,CAAaF,GAAb,CAAkBC,CAAD,IAAO;AACvBH,MAAAA,MAAM;;AACN,UAAIG,CAAC,KAAK,CAAV,EAAa;AACX,4BAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO,IAAIA,CAAC,KAAK,CAAV,EAAa;AAClB,4BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFM,MAEA;AACL,4BAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KATA,CADH,CADF,CADF;AAgBD,GAjBqB,CAAtB;AAmBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,IAAJ,CAFF,EAGGY,aAHH,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACnB,WAAW,CAACQ,QAAD,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAUD,CAxCD;;AA0CA,eAAeD,gBAAf","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport { StyledUl, Button, StyledDiv } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({ scenario, text, day }) => {\n  const data = useSelector((state) => {\n    if (action.scenario === 0) {\n      return state.AlgorithmReducer.firstScenarioData;\n    }\n    return state.AlgorithmReducer.secondScenarioData;\n  });\n  console.log(\"home\", data);\n\n  const dispatch = useDispatch();\n  let lastId = 0;\n  const scenarioItems = data.map((i, number) => {\n    return (\n      <StyledUl key={number}>\n        <li key={lastId}>\n          {data[number].map((i) => {\n            lastId++;\n            if (i === 2) {\n              return <ZombieHome />;\n            } else if (i === 1) {\n              return <HealthyHome />;\n            } else {\n              return <EmptyHome />;\n            }\n          })}\n        </li>\n      </StyledUl>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      <p>Day: </p>\n      <p>{text}</p>\n      {scenarioItems}\n      <Button onClick={() => dispatch(InfectHomes(scenario))}>\n        Play animation\n      </Button>\n    </StyledDiv>\n  );\n};\n\nexport default ScenarioTemplate;\n"]},"metadata":{},"sourceType":"module"}