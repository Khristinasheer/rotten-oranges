{"ast":null,"code":"var _jsxFileName = \"/Users/khristina/Documents/front-end/interview-homework/src/screens/home/home.js\";\nimport React from \"react\";\nimport { HeaderContainer, IconGuide, Text, Box, StyledUl } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\nimport FirstScenario from \"./firstScenario\";\nimport SecondScenario from \"./secondScenario\";\n\nconst Home = () => {\n  // algorithm solution\n  var homeInfection = function (grid) {\n    let day = 0;\n    let healthyHouses = 0;\n    let zombieHomes = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j] === 1) healthyHouses++;\n        if (grid[i][j] === 2) zombieHomes.push([i, j]);\n      }\n    }\n\n    const direction = [[0, -1], [0, 1], [-1, 0], [1, 0]];\n\n    while (healthyHouses && zombieHomes.length) {\n      let infectionProgress = [];\n\n      while (zombieHomes.length) {\n        let [x, y] = zombieHomes.pop();\n\n        for (let i = 0; i < 4; i++) {\n          let [x2, y2] = [x + direction[i][0], y + direction[i][1]];\n\n          if (grid[x2] && grid[x2][y2] === 1) {\n            grid[x2][y2] = 2;\n            healthyHouses--;\n            infectionProgress.push([x2, y2]);\n          }\n        }\n      }\n\n      zombieHomes = infectionProgress;\n      day++;\n    }\n\n    return healthyHouses ? -1 : day;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Zombies\"), /*#__PURE__*/React.createElement(IconGuide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EmptyHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Empty Home\"), /*#__PURE__*/React.createElement(HealthyHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Healthy Home\"), /*#__PURE__*/React.createElement(ZombieHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Zombie Home\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FirstScenario, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SecondScenario, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/khristina/Documents/front-end/interview-homework/src/screens/home/home.js"],"names":["React","HeaderContainer","IconGuide","Text","Box","StyledUl","HealthyHome","ZombieHome","EmptyHome","FirstScenario","SecondScenario","Home","homeInfection","grid","day","healthyHouses","zombieHomes","i","length","j","push","direction","infectionProgress","x","y","pop","x2","y2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HeaderContainer, IconGuide, Text, Box, StyledUl } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\nimport FirstScenario from \"./firstScenario\";\nimport SecondScenario from \"./secondScenario\";\n\nconst Home = () => {\n  // algorithm solution\n  var homeInfection = function (grid) {\n    let day = 0;\n    let healthyHouses = 0;\n    let zombieHomes = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j] === 1) healthyHouses++;\n        if (grid[i][j] === 2) zombieHomes.push([i, j]);\n      }\n    }\n    const direction = [\n      [0, -1],\n      [0, 1],\n      [-1, 0],\n      [1, 0],\n    ];\n\n    while (healthyHouses && zombieHomes.length) {\n      let infectionProgress = [];\n      while (zombieHomes.length) {\n        let [x, y] = zombieHomes.pop();\n        for (let i = 0; i < 4; i++) {\n          let [x2, y2] = [x + direction[i][0], y + direction[i][1]];\n          if (grid[x2] && grid[x2][y2] === 1) {\n            grid[x2][y2] = 2;\n            healthyHouses--;\n            infectionProgress.push([x2, y2]);\n          }\n        }\n      }\n      zombieHomes = infectionProgress;\n      day++;\n    }\n\n    return healthyHouses ? -1 : day;\n  };\n\n  return (\n    <>\n      <HeaderContainer>Zombies</HeaderContainer>\n      <IconGuide>\n        <EmptyHome width=\"40\" />\n        <Text>Empty Home</Text>\n        <HealthyHome width=\"40\" />\n        <Text>Healthy Home</Text>\n        <ZombieHome width=\"40\" />\n        <Text>Zombie Home</Text>\n      </IconGuide>\n\n      <Box>\n        <FirstScenario />\n        <SecondScenario />\n      </Box>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}