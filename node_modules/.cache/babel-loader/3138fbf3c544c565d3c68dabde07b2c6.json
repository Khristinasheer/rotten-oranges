{"ast":null,"code":"var _jsxFileName = \"/Users/khristina/Documents/interview-homework/src/screens/home/ScenarioTemplate.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport { StyledUl, Button, StyledDiv, LargerText, ButtonContainer, ArrowButton } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome, InfectedHome, ArrowRight, ArrowLeft } from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({\n  scenario,\n  text\n}) => {\n  const scenarioKey = scenario === 0 ? \"firstScenarioData\" : \"secondScenarioData\";\n  const scenarioDayKey = scenario === 0 ? \"firstScenarioDay\" : \"secondScenarioDay\";\n  const data = useSelector(state => state.AlgorithmReducer[scenarioKey], () => false);\n  const day = useSelector(state => state.AlgorithmReducer[scenarioDayKey]);\n\n  if (scenario === 0) {\n    console.log(\"home\", data);\n  }\n\n  const dispatch = useDispatch();\n  const scenarioItems = data.map((row, index) => {\n    return /*#__PURE__*/React.createElement(StyledUl, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: `${scenario}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, row.map((column, i) => {\n      const k = `${scenario}-${index}-${i}`;\n\n      if (column === 2) {\n        return /*#__PURE__*/React.createElement(ZombieHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }\n        });\n      } else if (column === 1) {\n        return /*#__PURE__*/React.createElement(HealthyHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }\n        });\n      } else if (column === 3) {\n        return /*#__PURE__*/React.createElement(InfectedHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 22\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(EmptyHome, {\n          key: k,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 22\n          }\n        });\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LargerText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Day: \", day), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, text), scenarioItems, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(InfectHomes(scenario)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Play animation\"), /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowButton, {\n    onClick: () => dispatch(InfectHomes(scenario, day - 1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ArrowButton, {\n    onClick: () => {\n      console.log(\"hello\", scenario);\n      dispatch(InfectHomes(scenario, day + 1));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ScenarioTemplate;","map":{"version":3,"sources":["/Users/khristina/Documents/interview-homework/src/screens/home/ScenarioTemplate.js"],"names":["React","useSelector","useDispatch","InfectHomes","StyledUl","Button","StyledDiv","LargerText","ButtonContainer","ArrowButton","HealthyHome","ZombieHome","EmptyHome","InfectedHome","ArrowRight","ArrowLeft","ScenarioTemplate","scenario","text","scenarioKey","scenarioDayKey","data","state","AlgorithmReducer","day","console","log","dispatch","scenarioItems","map","row","index","column","i","k"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { InfectHomes } from \"../../redux/actions/algorithmActions\";\nimport {\n  StyledUl,\n  Button,\n  StyledDiv,\n  LargerText,\n  ButtonContainer,\n  ArrowButton,\n} from \"./Styled\";\nimport {\n  HealthyHome,\n  ZombieHome,\n  EmptyHome,\n  InfectedHome,\n  ArrowRight,\n  ArrowLeft,\n} from \"../../svg-icons\";\n\nconst ScenarioTemplate = ({ scenario, text }) => {\n  const scenarioKey =\n    scenario === 0 ? \"firstScenarioData\" : \"secondScenarioData\";\n  const scenarioDayKey =\n    scenario === 0 ? \"firstScenarioDay\" : \"secondScenarioDay\";\n  const data = useSelector(\n    (state) => state.AlgorithmReducer[scenarioKey],\n    () => false\n  );\n  const day = useSelector((state) => state.AlgorithmReducer[scenarioDayKey]);\n\n  if (scenario === 0) {\n    console.log(\"home\", data);\n  }\n\n  const dispatch = useDispatch();\n  const scenarioItems = data.map((row, index) => {\n    return (\n      <StyledUl key={index}>\n        <li key={`${scenario}-${index}`}>\n          {row.map((column, i) => {\n            const k = `${scenario}-${index}-${i}`;\n            if (column === 2) {\n              return <ZombieHome key={k} />;\n            } else if (column === 1) {\n              return <HealthyHome key={k} />;\n            } else if (column === 3) {\n              return <InfectedHome key={k} />;\n            } else {\n              return <EmptyHome key={k} />;\n            }\n          })}\n        </li>\n      </StyledUl>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      <LargerText>Day: {day}</LargerText>\n      <p>{text}</p>\n      {scenarioItems}\n\n      <div>\n        <Button onClick={() => dispatch(InfectHomes(scenario))}>\n          Play animation\n        </Button>\n\n        <ButtonContainer>\n          <ArrowButton onClick={() => dispatch(InfectHomes(scenario, day - 1))}>\n            <ArrowLeft />\n          </ArrowButton>\n          <ArrowButton\n            onClick={() => {\n              console.log(\"hello\", scenario);\n              dispatch(InfectHomes(scenario, day + 1));\n            }}\n          >\n            <ArrowRight />\n          </ArrowButton>\n        </ButtonContainer>\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default ScenarioTemplate;\n"]},"metadata":{},"sourceType":"module"}