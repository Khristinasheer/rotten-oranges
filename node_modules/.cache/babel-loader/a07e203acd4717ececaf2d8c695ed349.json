{"ast":null,"code":"var _jsxFileName = \"/Users/khristina/Documents/front-end/interview-homework/src/screens/home/home.js\";\nimport React from \"react\";\nimport { HeaderContainer, IconGuide, Text, Box } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\nimport FirstScenario from \"./firstScenario\";\nimport SecondScenario from \"./secondScenario\";\n\nconst Home = () => {\n  // 0 = Empty Home\n  // 1 = Healthy Home\n  // 2 = Zombie Home\n  const firstScenarioData = [[1, 0, 1, 1, 0, 2], [1, 1, 1, 2, 1, 0], [0, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 2], [2, 0, 1, 0, 1, 0]];\n  const secondScenarioData = [[2, 0, 1, 0, 1, 2], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1], [2, 0, 1, 1, 0, 2], [1, 0, 0, 0, 1, 0], [2, 1, 0, 0, 2, 0]]; // algorithm solution\n\n  var homeInfection = function (grid) {\n    let day = 0;\n    let healthyHouses = 0;\n    let zombieHomes = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j] === 1) healthyHouses++;\n        if (grid[i][j] === 2) zombieHomes.push([i, j]);\n      }\n    }\n\n    const direction = [[0, -1], [0, 1], [-1, 0], [1, 0]];\n\n    while (healthyHouses && zombieHomes.length) {\n      let infectionProgress = [];\n\n      while (zombieHomes.length) {\n        let [x, y] = zombieHomes.pop();\n\n        for (let i = 0; i < 4; i++) {\n          let [x2, y2] = [x + direction[i][0], y + direction[i][1]];\n\n          if (grid[x2] && grid[x2][y2] === 1) {\n            grid[x2][y2] = 2;\n            healthyHouses--;\n            infectionProgress.push([x2, y2]);\n          }\n        }\n      }\n\n      zombieHomes = infectionProgress;\n      day++;\n    }\n\n    return healthyHouses ? -1 : day;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Zombies\"), /*#__PURE__*/React.createElement(IconGuide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EmptyHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Empty Home\"), /*#__PURE__*/React.createElement(HealthyHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Healthy Home\"), /*#__PURE__*/React.createElement(ZombieHome, {\n    width: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Zombie Home\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ScenarioTemplate, {\n    data: firstScenarioData,\n    text: \"A case where all can be infected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ScenarioTemplate, {\n    data: secondScenarioData,\n    text: \"A case with effective social distancing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/khristina/Documents/front-end/interview-homework/src/screens/home/home.js"],"names":["React","HeaderContainer","IconGuide","Text","Box","HealthyHome","ZombieHome","EmptyHome","FirstScenario","SecondScenario","Home","firstScenarioData","secondScenarioData","homeInfection","grid","day","healthyHouses","zombieHomes","i","length","j","push","direction","infectionProgress","x","y","pop","x2","y2"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { HeaderContainer, IconGuide, Text, Box } from \"./Styled\";\nimport { HealthyHome, ZombieHome, EmptyHome } from \"../../svg-icons\";\nimport FirstScenario from \"./firstScenario\";\nimport SecondScenario from \"./secondScenario\";\n\nconst Home = () => {\n  // 0 = Empty Home\n  // 1 = Healthy Home\n  // 2 = Zombie Home\n  const firstScenarioData = [\n    [1, 0, 1, 1, 0, 2],\n    [1, 1, 1, 2, 1, 0],\n    [0, 0, 1, 0, 1, 1],\n    [1, 0, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1, 2],\n    [2, 0, 1, 0, 1, 0],\n  ];\n  const secondScenarioData = [\n    [2, 0, 1, 0, 1, 2],\n    [1, 0, 0, 1, 0, 1],\n    [0, 0, 1, 0, 1, 1],\n    [2, 0, 1, 1, 0, 2],\n    [1, 0, 0, 0, 1, 0],\n    [2, 1, 0, 0, 2, 0],\n  ];\n\n  // algorithm solution\n  var homeInfection = function (grid) {\n    let day = 0;\n    let healthyHouses = 0;\n    let zombieHomes = [];\n\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j] === 1) healthyHouses++;\n        if (grid[i][j] === 2) zombieHomes.push([i, j]);\n      }\n    }\n    const direction = [\n      [0, -1],\n      [0, 1],\n      [-1, 0],\n      [1, 0],\n    ];\n\n    while (healthyHouses && zombieHomes.length) {\n      let infectionProgress = [];\n      while (zombieHomes.length) {\n        let [x, y] = zombieHomes.pop();\n        for (let i = 0; i < 4; i++) {\n          let [x2, y2] = [x + direction[i][0], y + direction[i][1]];\n          if (grid[x2] && grid[x2][y2] === 1) {\n            grid[x2][y2] = 2;\n            healthyHouses--;\n            infectionProgress.push([x2, y2]);\n          }\n        }\n      }\n      zombieHomes = infectionProgress;\n      day++;\n    }\n\n    return healthyHouses ? -1 : day;\n  };\n\n  return (\n    <>\n      <HeaderContainer>Zombies</HeaderContainer>\n      <IconGuide>\n        <EmptyHome width=\"40\" />\n        <Text>Empty Home</Text>\n        <HealthyHome width=\"40\" />\n        <Text>Healthy Home</Text>\n        <ZombieHome width=\"40\" />\n        <Text>Zombie Home</Text>\n      </IconGuide>\n\n      <Box>\n        <ScenarioTemplate\n          data={firstScenarioData}\n          text=\"A case where all can be infected\"\n        />\n        <ScenarioTemplate\n          data={secondScenarioData}\n          text=\"A case with effective social distancing\"\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}